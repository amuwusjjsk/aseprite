name: Build Aseprite on Windows

on: [push, pull_request]

jobs:
  build-windows:
    runs-on: windows-2022

    steps:
    # 1. 检出代码及子模块
    - name: Checkout repository and submodules
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    # 2. 安装构建工具
    - name: Install build tools
      run: |
        choco install cmake ninja -y
        choco install 7zip -y

    # 3. 设置MSVC开发环境
    - name: Setup MSVC environment
      uses: ilammy/msvc-dev-cmd@v1

    # 4. 下载Skia (使用官方链接，含重试机制)
    - name: Download Skia
      shell: bash
      run: |
        $SKIA_URL = "https://github.com/aseprite/skia/releases/download/m124-08a5439a6b/Skia-Windows-Release-x64.zip"
        $SKIA_ZIP = "skia.zip"
        $RETRY_COUNT = 3
        
        echo "Downloading Skia from official release: $SKIA_URL"
        
        # 重试循环
        for ($i = 1; $i -le $RETRY_COUNT; $i++) {
          echo "Attempt $i of $RETRY_COUNT"
          
          # 使用curl下载，-L跟随重定向
          curl -L -o $SKIA_ZIP $SKIA_URL
          
          # 检查文件大小是否合理（应远大于9字节）
          $FILE_SIZE = (Get-Item $SKIA_ZIP).Length
          echo "Downloaded file size: $FILE_SIZE bytes"
          
          if ($FILE_SIZE -gt 1000000) {
            echo "Download completed successfully."
            break
          }
          
          echo "Download may have failed, file is too small. Retrying in 5 seconds..."
          Remove-Item $SKIA_ZIP -ErrorAction SilentlyContinue
          Start-Sleep -Seconds 5
          
          # 最后一次尝试后失败
          if ($i -eq $RETRY_COUNT) {
            echo "ERROR: Failed to download Skia after $RETRY_COUNT attempts."
            exit 1
          }
        }

    # 5. 解压Skia
    - name: Extract Skia
      shell: bash
      run: |
        echo "Extracting Skia archive..."
        7z x skia.zip -oskia -y
        
        # 验证解压结果
        echo "Contents of skia directory:"
        ls -la skia/
        
        echo "Checking for expected files:"
        if [ -f "skia/out/Release-x64/skia.lib" ]; then
          echo "✓ skia.lib found successfully"
        else
          echo "✗ ERROR: skia.lib not found!"
          echo "Available files in skia/out/Release-x64/:"
          ls -la skia/out/Release-x64/ 2>/dev/null || echo "Directory does not exist"
          exit 1
        fi

    # 6. 创建构建目录并配置CMake
    - name: Configure CMake
      shell: bash
      run: |
        mkdir build
        cd build
        cmake -G Ninja .. `
          -DCMAKE_BUILD_TYPE=Release `
          -DLAF_BACKEND=skia `
          -DSKIA_DIR=$env:GITHUB_WORKSPACE/skia `
          -DSKIA_LIBRARY_DIR=$env:GITHUB_WORKSPACE/skia/out/Release-x64 `
          -DSKIA_LIBRARY=$env:GITHUB_WORKSPACE/skia/out/Release-x64/skia.lib

    # 7. 编译Aseprite
    - name: Build Aseprite
      shell: bash
      run: |
        cd build
        ninja aseprite

    # 8. 上传构建成果
    - name: Upload Aseprite Artifact
      uses: actions/upload-artifact@v4
      with:
        name: aseprite-windows-build
        path: |
          build/bin/aseprite.exe
          # 如果需要，可以添加其他相关文件
          # build/bin/data/
